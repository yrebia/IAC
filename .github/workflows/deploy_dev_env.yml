name: Deploy Dev Environment

on:
  push:
    branches: [dev]
    tags: ['v*.*.*']
  pull_request:
    branches: [dev]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TF_INPUT: "false"
      TF_IN_AUTOMATION: "true"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: eu-west-3

      - name: Who am I?
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init -backend-config=backends/dev.config -no-color

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Import Helm release "task-manager" if needed
        shell: bash
        run: |
          set -euo pipefail
          if terraform state show helm_release.task_manager >/dev/null 2>&1; then
            echo "helm_release.task_manager déjà dans le state -> skip import."
          else
            terraform import -var-file=dev.tfvars helm_release.task_manager app/task-manager
          fi

      - name: Terraform Plan
        run: terraform plan -var-file=dev.tfvars -lock-timeout=5m -no-color

      - name: Terraform Apply
        run: terraform apply -var-file=dev.tfvars -auto-approve -lock-timeout=5m -no-color
