name: Deploy Dev Environment

on:
  push:
    branches: [dev]
    tags: ['v*.*.*']
  pull_request:
    branches: [dev]

concurrency:
  group: terraform-dev
  cancel-in-progress: false

jobs:
  terraform-dev:
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read

    defaults:
      run:
        working-directory: infra

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: eu-west-3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init -backend-config=backends/dev.config -no-color

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan (dev)
        id: plan
        continue-on-error: true
        run: terraform plan -var-file="dev.tfvars" -var="enable_permissions=false" -no-color

      - name: Terraform Apply (dev)
        if: steps.plan.outcome == 'failure' || steps.plan.outcome == 'success'
        run: terraform apply -var-file="dev.tfvars" -var="enable_permissions=false" -auto-approve -no-color

      - name: Show Outputs
        run: terraform output -json | jq
